buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.lewis'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    ext {
        springCloudVersion = 'Finchley.SR2'
    }

    dependencies {
//        implementation('org.springframework.boot:spring-boot-starter-amqp')
//        implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')
//        implementation('org.springframework.boot:spring-boot-starter-data-jpa')
//        implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
//        implementation('org.springframework.boot:spring-boot-starter-data-redis')
//        implementation('org.springframework.boot:spring-boot-starter-jdbc')
//        implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
//        implementation('org.springframework.boot:spring-boot-starter-web')
//        implementation('org.apache.kafka:kafka-streams')
//        implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
//        implementation('org.springframework.cloud:spring-cloud-config-server')
//        implementation('org.springframework.cloud:spring-cloud-starter-config')
//        implementation('org.springframework.cloud:spring-cloud-starter-consul-config')
//        implementation('org.springframework.cloud:spring-cloud-starter-consul-discovery')
//        implementation('org.springframework.cloud:spring-cloud-starter-gateway')
//        implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
//        implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
//        implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
//        implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
//        implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
//        implementation('org.springframework.cloud:spring-cloud-starter-netflix-turbine')
//        implementation('org.springframework.cloud:spring-cloud-starter-netflix-turbine-stream')
//        implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
//        implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
//        implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
//        implementation('org.springframework.cloud:spring-cloud-starter-security')
//        implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
//        implementation('org.springframework.cloud:spring-cloud-starter-zipkin')
//        implementation('org.springframework.cloud:spring-cloud-starter-zookeeper-config')
//        implementation('org.springframework.cloud:spring-cloud-starter-zookeeper-discovery')
//        implementation('org.springframework.cloud:spring-cloud-stream-binder-kafka')
//        implementation('org.springframework.cloud:spring-cloud-stream-binder-rabbit')
//        implementation('org.springframework.kafka:spring-kafka')
        runtimeOnly('org.springframework.boot:spring-boot-devtools')
        runtimeOnly('mysql:mysql-connector-java')
        compileOnly('org.projectlombok:lombok')
        testImplementation('org.springframework.boot:spring-boot-starter-test')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}
